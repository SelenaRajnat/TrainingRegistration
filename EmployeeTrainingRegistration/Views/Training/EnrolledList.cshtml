
@{
    ViewBag.Title = "EnrolledList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enrolled Employees List</title>
    <link rel="stylesheet" type="text/css" href="~/css/training.css">
    <link rel="stylesheet" type="text/css" href="~/css/Enrolled.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Add this in your HTML head section -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Logout.js"></script>
</head>
<body>
    <!-- Include necessary scripts and stylesheets, such as Bootstrap -->
    <div class="topnav">
        <a class="active" href="@Url.Action("Index", "Training")">Training List</a>
        <a class="active" href="@Url.Action("EnrolledList", "Training")">Enrolled</a>
        <div class="split">
            <div style="float: right;">
                <button type="button" class="logoutButton" onclick="LogOut()">Log out</button>
            </div>
        </div>
    </div>
    <h2>Enrolled Employees List</h2>

    <table>
        <thead>
            <tr>
                <th>Training ID</th>
                <th>Training Name</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody id="enrolledList">
            <!-- List of enrolled employees will be added dynamically here -->
        </tbody>
    </table>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            // Sample data of enrolled employees
            const enrolledEmployees = [
                { id: 1, name: "John Dofe", status: "Pending" },
                { id: 2, name: "Jane Smith", status: "Approved" },
                { id: 3, name: "Bob Johnson", status: "Rejected" },
            ];

            const enrolledList = document.getElementById("enrolledList");

            // Function to create list items based on enrolled employees data
            function createEnrolledListItem(employee) {
                const listItem = document.createElement("tr");
                listItem.innerHTML = `<td>${employee.id}</td><td>${employee.name}</td><td class="${employee.status.toLowerCase()}">${employee.status}</td>`;
                return listItem;
            }

            // Display the initial list of enrolled employees
            enrolledEmployees.forEach(employee => {
                enrolledList.appendChild(createEnrolledListItem(employee));
            });

            // Example: Simulate updating the status after some time (e.g., after an approval process)
            setTimeout(() => {
                // Simulate an approval for the employee with id 1
                updateStatus(1, "Approved");
            }, 3000);

            // Function to update the status dynamically
            function updateStatus(employeeId, newStatus) {
                const employeeItem = enrolledList.querySelector(`[data-id="${employeeId}"]`);
                if (employeeItem) {
                    // Update the status text and class
                    employeeItem.querySelector(".status").textContent = newStatus;
                    employeeItem.querySelector(".status").className = newStatus.toLowerCase();
                }
            }
        });
    </script>
</body>
</html>



